@model Inzynierka.Models.Expo

@{
    ViewBag.Title = "Edytuj";
}

<h2>Edytuj</h2>

@using (Html.BeginForm(Html.BeginForm("Edit", "Expoes", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Expo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name_Expo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name_Expo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name_Expo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model=>model.Photo)
                <input type="file" name="plikzObrazkiem" />
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                <img src="~/Images/Expo/@Model.Photo" alt="" height="50%" width="50%" />
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.pdflayout, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.pdflayout)
                <input type="file" name="layouts" />
                @Html.ValidationMessageFor(model => model.pdflayout, "", new { @class = "text-danger" })
                <img src="~/Images/Expo/pdf/@Model.pdflayout" alt="" height="50%" width="50%" />
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Adres, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adres, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adres, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpoStartData, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpoStartData, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpoStartData, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpoEndData, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpoEndData, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpoEndData, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Wróć do listy", "Index")
</div>
